-- TODO
{-# LANGUAGE OverloadedRecordDot #-}
{-# LANGUAGE OverloadedStrings #-}

import Hakyll
import Text.Blaze.Html5 hiding (main)
import Text.Blaze.Html5.Attributes as A

index :: [a] -> Html
index posts = do
  h2 "Welcome"
  img ! src "/images/haskell-logo.png" ! A.style "float: right; margin: 10px;"
  p "Welcome to my blog!"
  h2 "This is what I have written about:"
  ul $ mapM_ (\post -> li $ a ! href post.url $ post.title <> " - " <> post.date) posts
  "$partial(\"templates/post-list.html\")$"
  p $ do
    "â€¦or you can find more in the"
    a ! href "/archive.html" $ "archives"
    "."

defaultHTML :: String -> Html -> Html
defaultHTML title body = docTypeHtml ! lang "en" $ do
  H.head $ do
    meta ! charset "utf-8"
    meta ! httpEquiv "x-ua-compatible" ! content "ie=edge"
    meta ! name "viewport" ! content "width=device-width, initial-scale=1"
    H.title "My Hakyll Blog - $title$"
    link ! rel "stylesheet" ! href "/css/default.css"
  body $ do
    header $ do
      H.div ! class_ "logo" $ a ! href "/" $ "My Hakyll Blog"
      nav $ do
        a ! href "/" $ "Home"
    dev ! class_ "user-content" $ do
      h1 title
      body
    footer $ do
      "Site proudly generated by"
      a ! href "http://jaspervdj.be/hakyll" $ "Hakyll"

--------------------------------------------------------------------------------
main :: IO ()
main = hakyll $ do
  match "static/*" $ route idRoute >> compile copyFileCompiler

  match "posts/*" $ do
    route $ setExtension "html"
    compile $
      pandocCompiler
        >>= loadAndApplyTemplate "templates/post.html" postCtx
        >>= loadAndApplyTemplate "templates/default.html" postCtx
        >>= relativizeUrls

  match "index.html" $ do
    route idRoute
    compile $ do
      posts <- recentFirst =<< loadAll "posts/*"
      let indexCtx = listField "posts" postCtx (pure posts) <> defaultContext

      getResourceBody
        >>= applyAsTemplate indexCtx
        >>= loadAndApplyTemplate "templates/default.html" indexCtx
        >>= relativizeUrls

  match "templates/*" $ compile templateBodyCompiler

--------------------------------------------------------------------------------
postCtx :: Context String
postCtx =
  dateField "date" "%B %e, %Y"
    <> defaultContext
